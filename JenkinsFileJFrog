#def semanticVersion = "${env.BUILD_NUMBER}.0.0"
#def packageName1 = "JenkinsDevOpsProject-1.34.0_pkg_${env.BUILD_NUMBER}"
#def packageName2 = "JFrogDefaultDocker_pkg_${env.BUILD_NUMBER}"
#def version = "${env.BUILD_NUMBER}.0.0"

def artifactname = "133testing-app.jar"
def repoName = "rome-rp1-app-repo"
def pipelineName = "balu_scripted_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "rome-rp1-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "rome-rp1-package"

pipeline {
    agent any
    tools { 
        maven 'Maven' 
    }
    stages {
        stage("Build") {
            steps {
                echo "Building..."
                sh 'mvn clean install -DskipTests=true'
            }
        }
        stage("Test") {
            steps {
            	echo "Testing..."
                sh "mvn test -Dpublish"
                junit "**/target/surefire-reports/*.xml"
            }
        }

      // stage("Deploy") {
      //      steps {
      //         echo "Deploying.."
      //          snDevOpsArtifact(artifactsPayload:"""{"artifacts": [
       //             {"name": "sunil_jfrog_demo_artifact.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "JenkinsDevOpsProject"}]}""")
        //        }
        //}

        stage('Deploy-Upload-JFrog_Artifact') {
            steps {
                echo 'uploading jfrog artifact......'
            }
            
            post {
                always {
                    script {
                             def server = Artifactory.server 'devopsbalujfrog'
                             def uploadSpec= """{
                                "files": [{
                                   "pattern": "/var/jenkins_home/workspace/SunilPipelines/Sunil-JFrog-Scripted-Pipeline1/target/JenkinsDevOpsProject-1.34.0-SNAPSHOT.jar",
                                   "target":"default-docker-local/sunil-jfrog-artifacts-upload/"
                                }]
                             }"""
            
                          def buildInfo = server.upload(uploadSpec)
                          server.publishBuildInfo buildInfo   
                    }
                    }
               }
            
        }//end of stage
        stage('Download-JFrog_Artifact') {
            steps {
                echo 'downloading jfrog artifact from jfrog'
            }
            
            post {
                  always {       
                   script {
                             def server = Artifactory.server 'devopsbalujfrog'
                             def downSpec= """{
                                "files": [{
                                   "pattern": "default-maven-local/35/test_devops-0.0.1-SNAPSHOT.jar",
                                   "target":"/var/jenkins_home/workspace/SunilPipelines/Sunil-JFrog-Scripted-Pipeline1/"
                                }]
                             }"""
            
                          def buildInfo = server.download(downSpec)
                          server.publishBuildInfo buildInfo   
                            
                    
                    } // end of script
                    
                   } //end of always
            }//end of post
       
       } //end of stage

        stage("Prod") {
            steps {
            	echo "Prod deploy..."
                   snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
        			snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
               }
         }
    }
 }
