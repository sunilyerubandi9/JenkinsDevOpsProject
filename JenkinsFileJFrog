def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName1 = "JenkinsDevOpsProject-1.34.0_pkg_${env.BUILD_NUMBER}"
def packageName2 = "JFrogDefaultDocker_pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0.0"

pipeline {
    agent any
    tools { 
        maven 'Maven' 
    }
    stages {
        stage("Build") {
            steps {
                echo "Building..."
                sh 'mvn clean install -DskipTests=true'
            }
        }
       <!--  stage("Test") {
            steps {
            	echo "Testing..."
                sh "mvn test -Dpublish"
                junit "**/target/surefire-reports/*.xml"
            }
        }

       stage("Deploy") {
            steps {
               echo "Deploying.."
                snDevOpsArtifact(artifactsPayload:"""{"artifacts": [
                    {"name": "sunil_jfrog_demo_artifact.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "JenkinsDevOpsProject"}]}""")
               }
        } -->

        stage('Upload-JFrog') {
            steps {
                echo 'uploading jfrog artifact......'
            }
            
            post {
                always {
                    script {
                             def server = Artifactory.server 'devopsbalujfrog'
                             def uploadSpec= """{
                                "files": [{
                                   "pattern": "/var/jenkins_home/workspace/SunilPipelines/Sunil-JFrog-Scripted-Pipeline1/target/JenkinsDevOpsProject-1.34.0-SNAPSHOT.jar",
                                   "target":"default-docker-local/sunil-jfrog-artifacts-upload/"
                                }]
                             }"""
            
                          def buildInfo = server.upload(uploadSpec)
                          server.publishBuildInfo buildInfo   
                        }
                    }
               }
            
        }//end of stage
        stage('Download-JFrog') {
            steps {
                echo 'downloading jfrog artifact from jfrog'
            }
            
            post {
                  always {       
                   script {
                             def server = Artifactory.server 'devopsbalujfrog'
                             def downSpec= """{
                                "files": [{
                                   "pattern": "default-maven-local/35/test_devops-0.0.1-SNAPSHOT.jar",
                                   "target":"/var/jenkins_home/workspace/SunilPipelines/Sunil-JFrog-Scripted-Pipeline1/"
                                }]
                             }"""
            
                          def buildInfo = server.download(downSpec)
                          server.publishBuildInfo buildInfo              
                    } // end of script
                    
                   } //end of always
            }//end of post
       } //end of stage
       <!-- stage("Prod") {
            steps {
            	echo "Prod deploy..."
                snDevOpsPackage(name: "${packageName1}", artifactsPayload: """{"artifacts": [
                    {"name": "sunil-jfrog-artifacts-upload/JenkinsDevOpsProject-1.34.0-SNAPSHOT.jar#SunilPipelines :: Sunil-JFrog-Scripted-Pipeline1","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "default-docker-local"}]}""")
               }
         } -->
    }
 }
